{
  "name": "spdx-expression-parse",
  "description": "parse SPDX license expressions",
  "version": "1.0.3",
  "author": {
    "name": "Kyle E. Mitchell",
    "email": "kyle@kemitchell.com",
    "url": "http://kemitchell.com"
  },
  "files": [
    "AUTHORS",
    "index.js",
    "parser.js"
  ],
  "devDependencies": {
    "defence-cli": "^1.0.1",
    "jison": "^0.4.15",
    "replace-require-self": "^1.0.0",
    "spdx-exceptions": "^1.0.4",
    "spdx-license-ids": "^1.0.0",
    "standard": "^8.0.0"
  },
  "keywords": [
    "SPDX",
    "law",
    "legal",
    "license",
    "metadata",
    "package",
    "package.json",
    "standards"
  ],
  "license": "(MIT AND CC-BY-3.0)",
  "repository": {
    "type": "git",
    "url": "kemitchell/spdx-expression-parse.js"
  },
  "scripts": {
    "lint": "standard",
    "prepublish": "node generate-parser.js > parser.js",
    "pretest": "npm run prepublish",
    "test": "defence -i javascript README.md | replace-require-self | node"
  },
  "contributors": [
    {
      "name": "Kyle E. Mitchell",
      "email": "kyle@kemitchell.com",
      "url": "https://kemitchell.com"
    },
    {
      "name": "Shinnosuke Watanabe",
      "email": "snnskwtnb@gmail.com"
    }
  ],
  "readme": "```javascript\nvar parse = require('spdx-expression-parse')\nvar assert = require('assert')\n\nassert.deepEqual(\n  parse('(LGPL-2.1 OR BSD-3-Clause AND MIT)'),\n  {\n    left: {license: 'LGPL-2.1'},\n    conjunction: 'or',\n    right: {\n      left: {license: 'BSD-3-Clause'},\n      conjunction: 'and',\n      right: {license: 'MIT'}\n    }\n  }\n)\n\nassert.deepEqual(\n  parse('(MIT AND (LGPL-2.1+ AND BSD-3-Clause))'),\n  {\n    left: {license: 'MIT'},\n    conjunction: 'and',\n    right: {\n      left: {license: 'LGPL-2.1', plus: true},\n      conjunction: 'and',\n      right: {license: 'BSD-3-Clause'}\n    }\n  }\n)\n\n// We handle all the bare SPDX license and exception ids as well.\nrequire('spdx-license-ids').forEach(function (id) {\n  assert.deepEqual(parse(id), {license: id})\n  require('spdx-exceptions').forEach(function (e) {\n    assert.deepEqual(\n      parse(id + ' WITH ' + e),\n      {license: id, exception: e}\n    )\n  })\n})\n```\n\n---\n\n[The Software Package Data Exchange (SPDX) specification](http://spdx.org) is the work of the [Linux Foundation](http://www.linuxfoundation.org) and its contributors, and is licensed under the terms of [the Creative Commons Attribution License 3.0 Unported (SPDX: \"CC-BY-3.0\")](http://spdx.org/licenses/CC-BY-3.0). \"SPDX\" is a United States federally registered trademark of the Linux Foundation.\n",
  "readmeFilename": "README.md",
  "_id": "spdx-expression-parse@1.0.3",
  "_from": "spdx-expression-parse@~1.0.0"
}
